# DO NOT MODIFY THIS AUTOGENERATED FILE
# Change it in m4 folder
FROM php:7.2-fpm-alpine
# persistent / runtime deps
ENV PHPIZE_DEPS \
    autoconf \
    cmake \
    file \
    g++ \
    gcc \
    libc-dev \
    pcre-dev \
    make \
    git \
    pkgconf \
    re2c \
    # for GD
    freetype-dev \
    libpng-dev  \
    libjpeg-turbo-dev \
    libxslt-dev \
    icu-dev \
    openssl-dev
RUN apk add --no-cache --virtual .persistent-deps \
    bash \
    # for intl extension
    icu-libs \
    libssl1.1 \
    # for postgres
    postgresql-dev \
    # for soap
    libxml2-dev \
    # for amqp
    libressl-dev \
    # for GD
    freetype \
    libpng \
    libjpeg-turbo \
    libxslt
RUN set -xe \
    # workaround for rabbitmq linking issue
    && ln -s /usr/lib /usr/local/lib64 \
    && apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
    && docker-php-ext-configure gd \
        --with-gd \
        --with-freetype-dir=/usr/include/ \
        --with-png-dir=/usr/include/ \
        --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-configure bcmath --enable-bcmath \
    && docker-php-ext-configure intl --enable-intl \
    && docker-php-ext-configure pcntl --enable-pcntl \
    && docker-php-ext-configure mysqli --with-mysqli \
    && docker-php-ext-configure pdo_mysql --with-pdo-mysql \
    && docker-php-ext-configure pdo_pgsql --with-pgsql \
    && docker-php-ext-configure mbstring --enable-mbstring \
    && docker-php-ext-configure soap --enable-soap \
    && docker-php-ext-install -j$(nproc) \
        gd \
        bcmath \
        intl \
        pcntl \
        mysqli \
        pdo_mysql \
        pdo_pgsql \
        mbstring \
        soap \
        iconv \ 
        json \
        zip \
        xml \
        sockets \
        soap \
        simplexml \
        opcache \
        iconv

# Copy configuration
COPY config/php7.ini /usr/local/etc/php/conf.d/

ENV RABBITMQ_VERSION v0.9.0
RUN git clone --branch ${RABBITMQ_VERSION} https://github.com/alanxz/rabbitmq-c.git /tmp/rabbitmq \
        && cd /tmp/rabbitmq \
        && mkdir build && cd build \
        && cmake .. \
        && cmake --build . --target install

ENV PHP_AMQP_VERSION v1.9.3
RUN git clone --branch ${PHP_AMQP_VERSION} https://github.com/pdezwart/php-amqp.git /tmp/php-amqp \
        && cd /tmp/php-amqp \
        && phpize  \
        && ./configure  \
        && make  \
        && make install
# Copy configuration
COPY config/amqp.ini /usr/local/etc/php/conf.d/

ENV PHP_REDIS_VERSION 4.2.0
RUN git clone --branch ${PHP_REDIS_VERSION} https://github.com/phpredis/phpredis /tmp/phpredis \
        && cd /tmp/phpredis \
        && phpize  \
        && ./configure  \
        && make  \
        && make install \
        && make test

# Copy configuration
COPY config/redis.ini /usr/local/etc/php/conf.d/
ENV PHP_PROTOBUF_VERSION v0.12.3
RUN git clone --branch ${PHP_PROTOBUF_VERSION} https://github.com/allegro/php-protobuf /tmp/phpprotobuf \
        && cd /tmp/phpprotobuf \
        && phpize  \
        && ./configure  \
        && make  \
        && make install \
        && make test

# Copy configuration
COPY config/protobuf.ini /usr/local/etc/php/conf.d/
RUN pecl install swoole
COPY config/swoole.ini /usr/local/etc/php/conf.d/
RUN docker-php-ext-install -j$(nproc) zip
RUN apk add --no-cache --virtual .persistent-deps git mysql-client rsync p7zip openssh-client

RUN xhprof_ext_ver="5.0-beta3"; \
    mkdir -p /usr/src/php/ext/tideways_xhprof; \
    xhprof_url="https://github.com/tideways/php-xhprof-extension/archive/v${xhprof_ext_ver}.tar.gz"; \
    wget -qO- "${xhprof_url}" | tar xz --strip-components=1 -C /usr/src/php/ext/tideways_xhprof; \
    docker-php-ext-install tideways_xhprof; \
    apk add libmcrypt-dev; \
    pecl install mcrypt-1.0.1; \
    docker-php-ext-enable mcrypt

RUN apk add freetype-dev libpng-dev libjpeg-turbo-dev libxml2-dev autoconf g++ imagemagick-dev imagemagick libtool make \
    && pecl install imagick \
    && docker-php-ext-enable imagick \
    && docker-php-ext-configure intl \
    && docker-php-ext-install pdo_pgsql pdo_mysql bcmath opcache intl zip gd

# Install APCu and APC backward compataibility
RUN  pecl install apcu \
    && pecl install apcu_bc-1.0.3 \
    && docker-php-ext-enable apcu --ini-name 10-docker-php-ext-apcu.ini \
    && docker-php-ext-enable apc --ini-name 20-docker-php-ext-apc.ini

RUN pecl install xdebug-2.6.0beta1 \
    && docker-php-ext-enable xdebug

RUN apk del .build-deps \
    && rm -rf /tmp/* \
    && rm -rf /app \
    && mkdir /app

COPY config/php7.ini /usr/local/etc/php/conf.d/
COPY config/fpm/php-fpm.conf /usr/local/etc/
COPY config/fpm/pool.d /usr/local/etc/pool.d

VOLUME ["/var/www"]
WORKDIR /var/www